{"mappings":"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","sources":["src/index.ts","src/ts/GridOverlay.ts","src/ts/const.ts","src/ts/defineElements.ts","src/ts/getGridSize.ts"],"sourcesContent":["import { GridOverlay } from './ts/GridOverlay'\n\ncustomElements.define('grid-overlay', GridOverlay)\n\nexport const overlay = new GridOverlay()\n","import { Property, property } from './const'\nimport { defineElements } from './defineElements'\nimport { getGridSize } from './getGridSize'\n\nexport class GridOverlay extends HTMLElement {\n  private option: Property\n  private shadow: ShadowRoot\n  private columns: number\n\n  constructor() {\n    super()\n    this.option = Object.seal({\n      opacity: 0.3,\n      color: 'rgb(165, 165, 255)',\n      margin: '16px',\n      gutters: '16px',\n      width: '1200px',\n      controller: false,\n      disabled: false,\n    })\n\n    this.columns = getGridSize()\n    this.shadow = Object.seal(this.attachShadow({ mode: 'open' }))\n  }\n\n  private static get observedAttributes() {\n    return Object.keys(property)\n  }\n\n  private attributeChangedCallback<P extends keyof typeof property>(\n    prop: P,\n    oldValue: Property[P],\n    newValue: Property[P]\n  ) {\n    const isDifferent = oldValue !== newValue\n\n    if (prop === 'controller' && isDifferent) {\n      newValue = this.getValidControllerValue(newValue as string)\n    }\n\n    if (isDifferent) this.option[prop] = newValue\n  }\n\n  private connectedCallback() {\n    this.observe(document.body)\n  }\n\n  private reset() {\n    if (!this.shadowRoot) return\n    this.shadowRoot.innerHTML = ``\n  }\n\n  private observe(element: Element) {\n    const resizeObserver = new ResizeObserver(() => {\n      this.reset()\n      this.setContent()\n    })\n    resizeObserver.observe(element)\n  }\n\n  private setControllerClick<E extends HTMLElement>(\n    controller: E,\n    container: E\n  ) {\n    controller.onclick = () => {\n      if (this.option.disabled) {\n        this.removeAttribute('disabled')\n      } else {\n        this.setAttribute('disabled', 'true')\n      }\n      container.classList.toggle('hidden')\n    }\n  }\n\n  private updateStyle() {\n    let style = this.shadow.querySelector('style')\n    if (!style) {\n      style = document.createElement('style')\n    }\n    style.textContent = `\n        .grid-controller {\n          display: ${this.option.controller ? 'initial' : 'none'};\n          position: fixed;\n          top: -.5rem;\n          left: 50%;\n          transform: translate3d(-50%, -50%, 0);\n          height: 40px;\n          width: 80px;\n          border-radius: .5rem;\n          cursor: pointer;\n          pointer-events: all;\n          border: 0;\n          isolation: isolate;\n          box-shadow: inset 0 0 2px 2px ${this.option.color};\n          transition: transform .15s ease-in-out;\n        }\n\n        .grid-controller:active {\n          transform: translate3d(-50%, -45%, 0);\n        }\n\n        .grid-overlay-container {\n          box-sizing: border-box;\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100vw;\n          height: 100vh;\n          padding-left: ${this.option.margin};\n          padding-right: ${this.option.margin};\n          opacity: ${this.option.opacity};\n          pointer-events: none;\n          transform: translateY(0);\n          transition: all .15s ease-in-out;\n        }\n\n        .grid-overlay {\n          width: 100%;\n          height: 100%;\n          max-width: ${this.option.width};\n          margin: auto;\n          display: grid;\n          grid-template-columns: repeat(${this.columns}, 1fr);\n          gap: ${this.option.gutters};\n          transition: all .15s ease-in-out;\n        }\n\n        .hidden {\n          opacity: 0;\n        }\n\n        .grid-overlay span {\n          background: conic-gradient(from 80deg at 30% 110%, #ffffff, ${\n            this.option.color\n          });\n          box-shadow: inset 0 0 2px #000;\n        }`\n\n    return style\n  }\n\n  private setContent() {\n    const { container, controller } = defineElements()\n    this.columns = getGridSize()\n    this.setControllerClick(controller, container)\n    const style = this.updateStyle()\n    this.shadow.append(style, container, controller)\n  }\n\n  public start() {\n    const overlay = document.querySelector('grid-overlay')\n    if (!overlay) document.body.appendChild(this)\n  }\n\n  public setOpacity(arg: number) {\n    this.option.opacity = arg\n  }\n\n  public setColor(arg: string) {\n    this.option.color = arg\n  }\n\n  public setWidth(arg: string) {\n    this.option.width = arg\n  }\n\n  public setMargin(arg: string) {\n    this.option.margin = arg\n  }\n\n  public setGutters(arg: string) {\n    this.option.gutters = arg\n  }\n\n  public setController(arg?: string | boolean) {\n    this.option.controller = arg?.toString() || ''\n  }\n\n  /**\n   * Allow the usage of the controller option on a template without `arg`\n   * eg:\n   * ```html\n   * <grid-overlay controller></grid-overlay>\n   * ```\n   */\n  private getValidControllerValue(arg: string) {\n    console.log(arg)\n\n    if (arg === '') return true\n    return JSON.parse(arg)\n  }\n}\n","export const property = {\n  opacity: 'opacity',\n  color: 'color',\n  margin: 'margin',\n  gutters: 'gutters',\n  width: 'width',\n  disabled: 'disabled',\n  controller: 'controller',\n} as const\n\nexport interface Property {\n  opacity: number\n  color: string\n  margin: string\n  gutters: string\n  width: string\n  disabled: string | boolean\n  controller: string | boolean\n}\n","import { getGridSize } from \"./getGridSize\";\n\nconst createElement = (tag: string, className: string) => {\n  const element = document.createElement(tag);\n  element.classList.add(className);\n  return element;\n};\n\nexport const defineElements = () => {\n  const container = createElement(\"span\", \"grid-overlay-container\");\n  const overlay = createElement(\"span\", \"grid-overlay\");\n  const controller = createElement(\"button\", \"grid-controller\");\n\n  container.append(overlay);\n\n  for (let i = getGridSize(); i > 0; i--) {\n    const column = document.createElement(\"span\");\n    overlay.appendChild(column);\n  }\n  return { container, controller };\n};\n","export const getGridSize = () => {\n  let size = 4;\n  const isTablet = window.matchMedia(\"(min-width: 450px)\").matches;\n  const isDesktop = window.matchMedia(\"(min-width: 1024px)\").matches;\n\n  if (isTablet) size = 8;\n  if (isDesktop) size = 12;\n\n  return size;\n};\n"],"names":[],"version":3,"file":"module.js.map"}